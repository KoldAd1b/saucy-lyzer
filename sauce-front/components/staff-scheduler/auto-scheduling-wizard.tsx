"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Calendar, Download, Wand2 } from "lucide-react"

export function AutoSchedulingWizard() {
  const [week, setWeek] = useState("next")
  const [generatedSchedule, setGeneratedSchedule] = useState(false)

  // Sample data - would be fetched from an API
  const staff = [
    { id: "1", name: "John Smith", role: "Server", availability: "Full-time" },
    { id: "2", name: "Jane Doe", role: "Server", availability: "Part-time" },
    { id: "3", name: "Mike Johnson", role: "Bartender", availability: "Full-time" },
    { id: "4", name: "Sarah Williams", role: "Host", availability: "Part-time" },
    { id: "5", name: "David Brown", role: "Kitchen Staff", availability: "Full-time" },
  ]

  const days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]

  // Sample schedule data - would be generated by the algorithm
  const scheduleData = {
    "1": {
      Monday: "11:00-19:00",
      Tuesday: "11:00-19:00",
      Wednesday: "OFF",
      Thursday: "11:00-19:00",
      Friday: "11:00-19:00",
      Saturday: "16:00-00:00",
      Sunday: "OFF",
    },
    "2": {
      Monday: "OFF",
      Tuesday: "OFF",
      Wednesday: "11:00-19:00",
      Thursday: "11:00-19:00",
      Friday: "16:00-00:00",
      Saturday: "11:00-19:00",
      Sunday: "11:00-19:00",
    },
    "3": {
      Monday: "OFF",
      Tuesday: "OFF",
      Wednesday: "OFF",
      Thursday: "16:00-00:00",
      Friday: "16:00-00:00",
      Saturday: "16:00-00:00",
      Sunday: "OFF",
    },
    "4": {
      Monday: "11:00-19:00",
      Tuesday: "11:00-19:00",
      Wednesday: "11:00-19:00",
      Thursday: "OFF",
      Friday: "OFF",
      Saturday: "11:00-19:00",
      Sunday: "11:00-19:00",
    },
    "5": {
      Monday: "10:00-18:00",
      Tuesday: "10:00-18:00",
      Wednesday: "10:00-18:00",
      Thursday: "OFF",
      Friday: "14:00-22:00",
      Saturday: "14:00-22:00",
      Sunday: "OFF",
    },
  }

  const generateSchedule = () => {
    setGeneratedSchedule(true)
  }

  return (
    <div className="space-y-4">
      <div className="flex flex-col sm:flex-row justify-between items-center gap-4">
        <div className="flex items-center gap-2">
          <Calendar className="h-4 w-4 text-muted-foreground" />
          <Select value={week} onValueChange={setWeek}>
            <SelectTrigger className="w-[180px]">
              <SelectValue placeholder="Select week" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="current">Current Week</SelectItem>
              <SelectItem value="next">Next Week</SelectItem>
              <SelectItem value="future">Two Weeks Ahead</SelectItem>
            </SelectContent>
          </Select>
        </div>
        <div className="flex gap-2">
          <Button variant="outline" disabled={!generatedSchedule}>
            <Download className="mr-2 h-4 w-4" />
            Export
          </Button>
          <Button onClick={generateSchedule}>
            <Wand2 className="mr-2 h-4 w-4" />
            Generate Schedule
          </Button>
        </div>
      </div>

      {generatedSchedule ? (
        <div className="rounded-md border overflow-x-auto">
          <div className="min-w-[800px]">
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>Staff</TableHead>
                  {days.map((day) => (
                    <TableHead key={day}>{day}</TableHead>
                  ))}
                </TableRow>
              </TableHeader>
              <TableBody>
                {staff.map((person) => (
                  <TableRow key={person.id}>
                    <TableCell className="font-medium">
                      <div>{person.name}</div>
                      <div className="text-xs text-muted-foreground">{person.role}</div>
                    </TableCell>
                    {days.map((day) => (
                      <TableCell key={day} className={scheduleData[person.id][day] === "OFF" ? "bg-gray-100" : ""}>
                        {scheduleData[person.id][day]}
                      </TableCell>
                    ))}
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </div>
        </div>
      ) : (
        <Card>
          <CardHeader>
            <CardTitle className="text-center">No Schedule Generated</CardTitle>
          </CardHeader>
          <CardContent className="text-center py-6">
            <p className="text-muted-foreground">
              Click the "Generate Schedule" button to create an optimized staff schedule based on forecasted demand.
            </p>
          </CardContent>
          <CardFooter className="flex justify-center">
            <Button onClick={generateSchedule}>
              <Wand2 className="mr-2 h-4 w-4" />
              Generate Schedule
            </Button>
          </CardFooter>
        </Card>
      )}
    </div>
  )
}
